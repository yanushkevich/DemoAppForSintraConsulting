package com.sintra.loanapp.model;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;

import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

@Data
@Entity
@Table(name = "loan")
@JsonIgnoreProperties({ "hibernateLazyInitializer", "handler" })
public class Loan {

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE)
	@ApiModelProperty(notes = "The autogenerated loan ID")
	private Long loan_id;

	@Enumerated(EnumType.STRING)
	@ApiModelProperty(notes = "The loan type")
	private LoanType loanType;

	@NotNull
	@Pattern(regexp = "[0-9]+([.][0-9]{1,2})?")
	@ApiModelProperty(notes = "The loan amount")
	private String loanAmount;

	@NotNull
	@Pattern(regexp = "^\\d{1,10}$")
	@ApiModelProperty(notes = "The loan rate")
	private String rates;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_id")
	@JsonBackReference
	private Customer customer;

	@ApiModelProperty(notes = "The loan attachment")
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "loan")
	@JsonManagedReference
	List<CustomerAttachment> documents = new ArrayList<>();

	public Loan() {

	}

	public Loan(LoanType loanType, String loanAmount, String rates, Customer customer) {
		this.loanType = loanType;
		this.loanAmount = loanAmount;
		this.rates = rates;
		this.customer = customer;
	}

}
